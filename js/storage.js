/* ==============================
   üì¶ LoanCalc Pro ‚Äî storage.js
   ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ (localStorage)
   ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á import
============================== */

const STORAGE_KEY = "loanCalcPro_customers";

/* ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */
function getAllCustomers() {
  const data = localStorage.getItem(STORAGE_KEY);
  return data ? JSON.parse(data) : [];
}

/* üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤ localStorage */
function saveAllCustomers(customers) {
  localStorage.setItem(STORAGE_KEY, JSON.stringify(customers));
}

/* üÜï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà */
function addCustomer(customer) {
  const customers = getAllCustomers();
  customers.push(customer);
  saveAllCustomers(customers);
  return customer;
}

/* ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤ */
function addLoanToCustomer(custId, loan) {
  const customers = getAllCustomers();
  const idx = customers.findIndex((c) => c.id === custId);
  if (idx === -1) return false;
  customers[idx].loans = customers[idx].loans || [];
  customers[idx].loans.push(loan);
  saveAllCustomers(customers);
  return true;
}

/* üîç ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏µ‡∏¢‡∏ß */
function getCustomerById(id) {
  return getAllCustomers().find((c) => c.id === id);
}

/* ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ */
function updateCustomer(custId, newData) {
  const customers = getAllCustomers();
  const idx = customers.findIndex((c) => c.id === custId);
  if (idx === -1) return false;
  customers[idx] = { ...customers[idx], ...newData };
  saveAllCustomers(customers);
  return true;
}

/* ‚ùå ‡∏•‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */
function deleteCustomer(custId) {
  const customers = getAllCustomers().filter((c) => c.id !== custId);
  saveAllCustomers(customers);
}

/* üßæ ‡∏•‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ */
function deleteLoan(custId, loanId) {
  const customers = getAllCustomers();
  const idx = customers.findIndex((c) => c.id === custId);
  if (idx === -1) return false;
  customers[idx].loans = customers[idx].loans.filter((l) => l.id !== loanId);
  saveAllCustomers(customers);
  return true;
}

/* üí∞ ‡∏ï‡∏¥‡πä‡∏Å‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß */
function updatePayment(custId, loanId, termIndex, paid) {
  const customers = getAllCustomers();
  const custIdx = customers.findIndex((c) => c.id === custId);
  if (custIdx === -1) return false;

  const loanIdx = customers[custIdx].loans.findIndex((l) => l.id === loanId);
  if (loanIdx === -1) return false;

  const loan = customers[custIdx].loans[loanIdx];
  loan.paid = loan.paid || [];
  loan.paid[termIndex] = paid;

  customers[custIdx].loans[loanIdx] = loan;
  saveAllCustomers(customers);
  return true;
}

/* üßÆ ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á id */
function generateId(prefix = "id") {
  return `${prefix}_${Date.now()}_${Math.floor(Math.random() * 9999)}`;
}

/* üì¶ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÉ‡∏´‡∏°‡πà */
function saveNewLoan(customerInfo, loanData) {
  const customers = getAllCustomers();

  // ‡∏´‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏´‡∏° (‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠ + ‡πÄ‡∏ö‡∏≠‡∏£‡πå)
  let existing = customers.find(
    (c) =>
      c.name === customerInfo.name &&
      c.phone === customerInfo.phone
  );

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
  if (!existing) {
    const newCust = {
      id: generateId("cust"),
      name: customerInfo.name,
      phone: customerInfo.phone || "",
      address: customerInfo.address || "",
      createdAt: new Date().toISOString(),
      loans: [
        {
          ...loanData,
          id: generateId("loan"),
          createdAt: new Date().toISOString(),
          paid: [], // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡∏á‡∏ß‡∏î
        },
      ],
    };
    addCustomer(newCust);
    return newCust;
  }

  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏° loan ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡∏≤
  const newLoan = {
    ...loanData,
    id: generateId("loan"),
    createdAt: new Date().toISOString(),
    paid: [], // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡∏á‡∏ß‡∏î
  };
  addLoanToCustomer(existing.id, newLoan);
  return existing;
}
